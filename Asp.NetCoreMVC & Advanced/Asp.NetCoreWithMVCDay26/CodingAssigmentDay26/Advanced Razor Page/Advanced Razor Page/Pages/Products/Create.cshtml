@page
@model AdvancedRazorPages.Pages.Products.CreateModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Create Product</title>
</head>
<body>
    <h2>Create Product</h2>

    <form method="post">
        <div>
            <label asp-for="Product.Name"></label><br />
            <input asp-for="Product.Name" />
            <span asp-validation-for="Product.Name" style="color:red"></span>
        </div>
        <div style="margin-top:8px;">
            <label asp-for="Product.Description"></label><br />
            <textarea asp-for="Product.Description"></textarea>
        </div>

        <h4 style="margin-top:14px;">Categories</h4>
        <div id="categories">
            @for (int i = 0; i < Model.Product.Categories.Count; i++)
            {
                <div class="cat-row" data-index="@i" style="margin-bottom:6px;">
                    <input type="text" name="Product.Categories[@i].Name" placeholder="Category name" />
                    <button type="button" class="remove" onclick="removeRow(this)">Remove</button>
                </div>
            }
        </div>

        <button type="button" id="add">+ Add Category</button>

        <div style="margin-top:14px;">
            <button type="submit">Save</button>
            <a asp-page="/Products/Index">Cancel</a>
        </div>
    </form>

    <script>
        const container = document.getElementById('categories');
        document.getElementById('add').addEventListener('click', () => {
            const index = container.querySelectorAll('.cat-row').length;
            const div = document.createElement('div');
            div.className = 'cat-row';
            div.setAttribute('data-index', index);
            div.style.marginBottom = '6px';
            div.innerHTML =
                `<input type="text" name="Product.Categories[${index}].Name" placeholder="Category name" />
                 <button type="button" class="remove" onclick="removeRow(this)">Remove</button>`;
            container.appendChild(div);
        });

        function removeRow(btn) {
            const row = btn.closest('.cat-row');
            row.remove();
            // reindex names to keep 0..N-1 (ensures correct binding)
            Array.from(container.querySelectorAll('.cat-row')).forEach((r, i) => {
                r.setAttribute('data-index', i);
                const input = r.querySelector('input[type="text"]');
                input.setAttribute('name', `Product.Categories[${i}].Name`);
            });
        }
    </script>
</body>
</html>
