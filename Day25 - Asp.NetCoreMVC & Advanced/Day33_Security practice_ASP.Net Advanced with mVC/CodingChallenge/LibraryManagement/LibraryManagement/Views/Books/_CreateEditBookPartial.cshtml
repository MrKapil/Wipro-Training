@model LibraryManagement.ViewModels.BookViewModel

<form id="bookForm">
    <input type="hidden" name="BookId" value="@Model.BookId" />

    <div class="mb-3">
        <label class="form-label">Title</label>
        <input class="form-control" name="Title" value="@Model.Title" required maxlength="500" />
    </div>

    <div class="mb-3">
        <label class="form-label">Author</label>
        <select class="form-select" name="AuthorId" required>
            <option value="">--Select--</option>
            @foreach (var a in Model.Authors)
            {
                <option value="@a.Value" selected="@(a.Value == Model.AuthorId.ToString())">@a.Text</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Genres</label>
        <div>
            @foreach (var g in Model.Genres)
            {
                var gid = int.Parse(g.Value);
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" name="SelectedGenreIds" value="@g.Value"
                           @(Model.SelectedGenreIds.Contains(gid) ? "checked" : "") />
                    <label class="form-check-label">@g.Text</label>
                </div>
            }
        </div>
    </div>

    <div class="text-end">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</form>

<script>
    // The real JS handlers are in wwwroot/js/books.js; this file will be loaded into modal
</script>
